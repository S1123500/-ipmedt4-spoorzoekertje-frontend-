{"ast":null,"code":"var _jsxFileName = \"D:\\\\ipmedt4-spoorzoekertje-frontend\\\\src\\\\components\\\\Timer.js\";\nimport React, { Component } from 'react';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: props.totalseconds\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n    this.startTimer();\n  }\n\n  startTimer() {\n    if (this.timer === 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n\n    if (seconds === 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"timer\",\n      id: \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, this.state.time.m, \":\", this.state.time.s));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"names":["React","Component","Timer","constructor","props","state","time","seconds","totalseconds","timer","startTimer","bind","countDown","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","componentDidMount","timeLeftVar","setState","setInterval","clearInterval","render","m","s"],"sources":["D:/ipmedt4-spoorzoekertje-frontend/src/components/Timer.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { time: {}, seconds: props.totalseconds};\r\n        this.timer = 0;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    secondsToTime(secs) {\r\n        let hours = Math.floor(secs / (60 * 60));\r\n        let divisor_for_minutes = secs % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        if (seconds < 10) {\r\n            seconds = \"0\" + seconds;\r\n        }\r\n        let obj = {\r\n            \"h\": hours,\r\n            \"m\": minutes,\r\n            \"s\": seconds\r\n        };\r\n        return obj;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n        this.setState({\r\n            time: timeLeftVar\r\n        });\r\n        this.startTimer();\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timer === 0) {\r\n            this.timer = setInterval(this.countDown, 1000);\r\n        }\r\n    }\r\n\r\n    countDown() {\r\n        let seconds = this.state.seconds - 1;\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds\r\n        });\r\n        if (seconds === 0) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"timer\" id=\"timer\">{this.state.time.m}:{this.state.time.s}</h1>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;EAC1BE,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MAAEC,IAAI,EAAE,EAAR;MAAYC,OAAO,EAAEH,KAAK,CAACI;IAA3B,CAAb;IACA,KAAKC,KAAL,GAAa,CAAb;IACA,KAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;IACA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;EACH;;EAEDE,aAAa,CAACC,IAAD,EAAO;IAChB,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,IAAI,KAAK,EAAT,CAAf,CAAZ;IACA,IAAII,mBAAmB,GAAGJ,IAAI,IAAI,KAAK,EAAT,CAA9B;IACA,IAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAd;IACA,IAAIE,mBAAmB,GAAGF,mBAAmB,GAAG,EAAhD;IACA,IAAIX,OAAO,GAAGS,IAAI,CAACK,IAAL,CAAUD,mBAAV,CAAd;;IAEA,IAAIb,OAAO,GAAG,EAAd,EAAkB;MACdA,OAAO,GAAG,MAAMA,OAAhB;IACH;;IACD,IAAIe,GAAG,GAAG;MACN,KAAKP,KADC;MAEN,KAAKI,OAFC;MAGN,KAAKZ;IAHC,CAAV;IAKA,OAAOe,GAAP;EACH;;EAEDC,iBAAiB,GAAG;IAChB,IAAIC,WAAW,GAAG,KAAKX,aAAL,CAAmB,KAAKR,KAAL,CAAWE,OAA9B,CAAlB;IACA,KAAKkB,QAAL,CAAc;MACVnB,IAAI,EAAEkB;IADI,CAAd;IAGA,KAAKd,UAAL;EACH;;EAEDA,UAAU,GAAG;IACT,IAAI,KAAKD,KAAL,KAAe,CAAnB,EAAsB;MAClB,KAAKA,KAAL,GAAaiB,WAAW,CAAC,KAAKd,SAAN,EAAiB,IAAjB,CAAxB;IACH;EACJ;;EAEDA,SAAS,GAAG;IACR,IAAIL,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;IACA,KAAKkB,QAAL,CAAc;MACVnB,IAAI,EAAE,KAAKO,aAAL,CAAmBN,OAAnB,CADI;MAEVA,OAAO,EAAEA;IAFC,CAAd;;IAIA,IAAIA,OAAO,KAAK,CAAhB,EAAmB;MACfoB,aAAa,CAAC,KAAKlB,KAAN,CAAb;IACH;EACJ;;EAEDmB,MAAM,GAAG;IACL,oBACI,uDACI;MAAI,SAAS,EAAC,OAAd;MAAsB,EAAE,EAAC,OAAzB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAkC,KAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,CAAlD,OAAsD,KAAKxB,KAAL,CAAWC,IAAX,CAAgBwB,CAAtE,CADJ,CADJ;EAKH;;AA1DyB;;AA6D9B,eAAe5B,KAAf"},"metadata":{},"sourceType":"module"}